server.servlet.context-path=${SAMPLE_CONTEXT_PATH:/}

server.error.path=/sample-ui/error
server.error.include-stacktrace=never

spring.application.name=sample-ui

# to run this with local redis, start it with the redis profile:
#
# -Dspring.profiles.active=redis
#
spring.profiles.active=sentinel

spring.security.oauth2.client.registration.iam.client-id=${SAMPLE_UI_IAM_CLIENT_ID:clientId}
spring.security.oauth2.client.registration.iam.client-secret=${SAMPLE_UI_IAM_CLIENT_SECRET:clientSecret}
spring.security.oauth2.client.registration.iam.redirect-uri=${SAMPLE_PUBLIC_URL}${SAMPLE_CONTEXT_PATH:}/sample-ui/login/callback/iam
spring.security.oauth2.client.registration.iam.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.iam.scope=openid, profile
spring.security.oauth2.client.registration.iam.client-authentication-method=post
spring.security.oauth2.client.provider.iam.authorization-uri=${SAMPLE_UI_IAM_AUTHORIZATION_URI:http://example.com/oauth2/v1/auth}
spring.security.oauth2.client.provider.iam.token-uri=${SAMPLE_UI_IAM_TOKEN_URI:http://example.com/oauth2/v1/token}
# spring.security.oauth2.client.provider.iam.user-info-uri=${SAMPLE_UI_IAM_USER_INFO_URI}
spring.security.oauth2.client.provider.iam.user-name-attribute=sub
spring.security.oauth2.client.provider.iam.jwk-set-uri=${SAMPLE_UI_IAM_JWKS_URI:http://example.com/.well-known/jwks.json}

sample-ui.url=${SAMPLE_PUBLIC_URL:your-public-url}${SAMPLE_CONTEXT_PATH:}

tru.id.cors.allowed-origins=${SAMPLE_PUBLIC_URL}

# used to also logout of the IAM provider
tru.id.iam.logout-success-url=${SAMPLE_UI_IAM_LOGOUT_SUCCESS_URL:${SAMPLE_CONTEXT_PATH:}/sample-ui}

tru.id.bridge.api.base-url=${SAMPLE_PUBLIC_URL:}${SAMPLE_CONTEXT_PATH:}/bridge/api

# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.security.oauth2=TRACE
# logging.level.org.springframework.security.web.authentication=TRACE
# org.springframework.security.config.annotation.web.builders.WebSecurity.debugEnabled=true